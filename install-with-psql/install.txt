bash psql-install.sh

sudo -i -u postgres psql -c "CREATE USER vault WITH PASSWORD 'pwadmin';"
sudo -i -u postgres psql -c "ALTER USER vault WITH SUPERUSER;"
sudo -i -u postgres psql -c "CREATE DATABASE vault OWNER vault;"

cat hashicorp_vault_postgresql_schema.sql

sudo -i -u postgres psql -d vault -f hashicorp_vault_postgresql_schema.sql

helm repo add hashicorp https://helm.releases.hashicorp.com

helm repo update

helm upgrade --install vault hashicorp/vault -n vault --create-namespace -f vault-values.yaml

kubectl -n vault get all

kubectl exec vault-0 -n vault -- vault operator init -key-shares=1 -key-threshold=1 -format=json > cluster-keys.json

VAULT_UNSEAL_KEY=$(jq -r ".unseal_keys_b64[]" cluster-keys.json)

kubectl exec vault-0 -n vault -- vault operator unseal $VAULT_UNSEAL_KEY
kubectl exec vault-1 -n vault -- vault operator unseal $VAULT_UNSEAL_KEY
kubectl exec vault-2 -n vault -- vault operator unseal $VAULT_UNSEAL_KEY

kubectl -n vault get all

kubectl exec -it  vault-0 -n vault -- /bin/sh

vault login

cat > vso-values.yaml
defaultVaultConnection:
  enabled: true
  address: "http://vault-internal.vault.svc.cluster.local:8200"
  skipTLSVerify: false

helm install vault-secrets-operator hashicorp/vault-secrets-operator -n vault --create-namespace --values vso-values.yaml

vault secrets enable kv-v2

vault kv put kv-v2/flask-app/flask-app-secret username=myuser password=pwadmin

vault policy write flask-app-secret - << EOF
    path "kv-v2/data/flask-app/flask-app-secret" {
    capabilities = ["read"]
    }
EOF

vault write auth/kubernetes/role/flask-app \
  bound_service_account_names=default \
  bound_service_account_namespaces=flask-app \
  policies=default,flask-app-secret \
  audience=vault \
  ttl=24h

kubectl -n vault get all

kubectl create ns flask-app

cat > kv-secret.yaml

apiVersion: secrets.hashicorp.com/v1beta1
kind: VaultStaticSecret
metadata:
  namespace: flask-app
  name: vault-static-secret-flask-app-secret
spec:
  vaultAuthRef: static-auth
  mount: kv-v2
  type: kv-v2
  path: flask-app/flask-app-secret
  refreshAfter: 10s
  destination:
    create: true
    name: flask-app-secret
  rolloutRestartTargets:
  - kind: Deployment
    name: flask-app

kubectl apply -f kv-secret.yaml


cat > vault-auth.yaml

apiVersion: secrets.hashicorp.com/v1beta1
kind: VaultAuth
metadata:
  name: static-auth
  namespace: flask-app
spec:
  # vaultConnectionRef: default
  method: kubernetes
  mount: kubernetes
  kubernetes:
    role: flask-app
    serviceAccount: default
    audiences:
      - vault

kubectl apply -f vault-auth.yaml

kubectl -n flask-app get all

kubectl -n flask-app get VaultStaticSecret

kubectl -n flask-app get VaultAuth

kubectl get secret flask-app-secret -n flask-app -o jsonpath="{.data.username}" | base64 --decode

kubectl get secret flask-app-secret -n flask-app -o jsonpath="{.data.password}" | base64 --decode

#NEW_VAULT_TOKEN=$(vault token create -format=json | jq -r .auth.client_token)
